Résumé du coverage
	• Couverture totale du code : 91%
	• Fichiers analysés :
		- tp7_implémentée.py : 82% de couverture
		- tp9_test_unitaire.py : 99% de couverture

Analyse détaillée
1. Fichier tp7_implémentée.py
	• Nombre total de statements : 85
	• Statements non couverts : 15
	• Couverture : 82%
	• Problèmes principaux :
		- Certaines méthodes ont une couverture partielle ou manquent de tests unitaires pour des cas spécifiques (ex. __eq__ à 67%, __sub__ à 88%).

		- Des méthodes avec des rôles importants, comme Fraction.__add__ ou Fraction.__mul__, atteignent seulement 80% de couverture, indiquant un besoin d'ajouter des tests unitaires couvrant des cas supplémentaires.

		- Les méthodes liées à la vérification des propriétés (is_zero, is_integer, etc.) ont une couverture complète, ce qui est un bon point.

2. Fichier tp9_test_unitaire.py
	• Nombre total de statements : 86
	• Statements non couverts : 1
	• Couverture : 99%
	• Points positifs :
		- Les tests unitaires pour les méthodes principales (test_addition, test_subtraction, test_power) couvrent bien le code implémenté.
		- Il reste un seul statement non couvert, qui pourrait indiquer un cas particulier ou un bloc conditionnel qui n'est jamais exécuté pendant les tests.
